from aiogram import types, Router

from db_handler.database import get_user_by_id, top_promo, get_all_by_guide
from filters.admin import check_admin
from keyboards.keyboards import admin_panel_main, balance_out_money, balance_out_money_admin, out_money_get_card

router = Router()

@router.callback_query(lambda call: call.data == "admin_panel")
async def admin_panel_callback(call):

    if not check_admin(call.from_user.id):
        await call.message.answer("‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –¥–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω! ‚ùå\n"
                                  "–í–≤–µ–¥–∏—Ç–µ /start –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏: OlegFadeev2000@gmail.com")
        return

    text = (f"<b>‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å ‚öôÔ∏è</b>\n\n"
            f"<i>–≠—Ç–æ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π:</i>")

    await call.message.answer(text=text, reply_markup=admin_panel_main())

@router.callback_query(lambda call: call.data == "statistic_admin")
async def statistic_admin_callback(call):

    get_quantities_by_guide = get_all_by_guide().__len__()

    text = (f"<b>üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìã</b>\n\n"
            f"üí∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –≥–∞–π–¥–æ–≤: <i>{get_quantities_by_guide}</i>\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"üìà {check_top_promo()}")

    await call.message.answer(text=text)

    #await call.message.answer("–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")

def check_top_promo():
    try:
        top_promo_codes = top_promo(5)

        if not top_promo_codes:
            return "‚ùå –ü—Ä–æ–º–æ–∫–æ–¥—ã –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å! ‚ùå"
        response = "<b>–¢–æ–ø 5 –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:</b>\n\n"
        for idx, (promo_code, users_count) in enumerate(top_promo_codes, start=1):
            response += f"{idx}. –ü—Ä–æ–º–æ–∫–æ–¥: <code>{promo_code}</code> ‚Äî {users_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"

        return response
    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"

